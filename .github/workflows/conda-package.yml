name: Conda package

on:
  push:
    branches:
      - master
  pull_request:

permissions: read-all

env:
  package_name: mkl_fft
  test_env_name: test_mkl_fft
  ver_script_part1: "import json; f = open('ver.json', 'r'); j = json.load(f); f.close(); d = j['mkl_fft'][0];"
  ver_script_part2: "print('='.join((d[s] for s in ('version', 'build'))))"

jobs:
  build_linux:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python: ['3.9', '3.10', '3.11', '3.12']

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@85880fa0301c86cca9da44039ee3bb12d3bedbfa # 0.12.1
        with:
          access_token: ${{ github.token }}

      - name: Checkout repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Setup miniconda
        uses: conda-incubator/setup-miniconda@505e6394dae86d6a5c7fbb6e3fb8938e3e863830 # v3.1.1
        with:
          miniforge-version: latest
          activate-environment: build
          python-version: ${{ matrix.python }}
          channels: conda-forge
          conda-remove-defaults: 'true'

      - name: Store conda paths as envs
        run: |
          echo "CONDA_BLD=${CONDA}/conda-bld/linux-64" >> $GITHUB_ENV

      - name: List conda env
        run: |
          conda env list

      - name: Install conda-build
        run: |
          conda install conda-build python=3.12 # conda-build does not support python=3.13

      - name: Build conda package
        run: |
          conda env list
          CHANNELS="-c https://software.repos.intel.com/python/conda -c conda-forge --override-channels"
          VERSIONS="--python ${{ matrix.python }}"
          TEST="--no-test"

          conda build \
            $TEST \
            $VERSIONS \
            $CHANNELS \
            conda-recipe

      - name: Upload artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ env.package_name }} ${{ runner.os }} Python ${{ matrix.python }}
          path: ${{ env.CONDA_BLD }}/${{ env.package_name }}-*.conda

  test_linux:
    needs: build_linux
    runs-on:  ${{ matrix.runner }}

    strategy:
      matrix:
        python: ['3.9', '3.10', '3.11', '3.12']
        experimental: [false]
        runner: [ubuntu-latest]
    continue-on-error: ${{ matrix.experimental }}
    env:
      CHANNELS: -c https://software.repos.intel.com/python/conda -c conda-forge --override-channels

    steps:
      - name: Download artifact
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: ${{ env.package_name }} ${{ runner.os }} Python ${{ matrix.python }}

      - name: Setup miniconda
        uses: conda-incubator/setup-miniconda@505e6394dae86d6a5c7fbb6e3fb8938e3e863830 # v3.1.1
        with:
          miniforge-version: latest
          activate-environment: ${{ env.test_env_name }}
          python-version: ${{ matrix.python }}
          channels: conda-forge
          conda-remove-defaults: 'true'

      - name: List conda env
        run: |
          conda env list

      - name: Install conda-index
        run: |
          conda install conda-index python=3.12  # conda-index does not support python=3.13

      - name: Create local channel
        run: |
          mkdir -p $GITHUB_WORKSPACE/channel/linux-64
          mv ${{ env.package_name }}-*.conda $GITHUB_WORKSPACE/channel/linux-64
          conda index $GITHUB_WORKSPACE/channel

      - name: Test local channel
        run: |
          conda search ${{ env.package_name }} -c $GITHUB_WORKSPACE/channel --override-channels

      - name: List conda env
        run: |
          conda env list

      - name: Install mkl_fft
        run: |
          CHANNELS="-c $GITHUB_WORKSPACE/channel ${{ env.CHANNELS }}"
          conda env list
          conda install -n ${{ env.test_env_name }} python=${{ matrix.python }} ${{ env.package_name }} pytest scipy $CHANNELS
          conda env list

      - name: List installed packages
        run: |
          conda list -n ${{ env.test_env_name }}

      - name: List conda env
        run: |
          conda env list

      - name: Run tests
        run: |
          conda env list
          source $CONDA/etc/profile.d/conda.sh
          conda activate ${{ env.test_env_name }}  
          conda env list
          python -m pytest -v --pyargs ${{ env.package_name }}.tests

  build_windows:
    runs-on: windows-2019

    strategy:
      matrix:
        python: ['3.9', '3.10', '3.11', '3.12']

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@85880fa0301c86cca9da44039ee3bb12d3bedbfa # 0.12.1
        with:
          access_token: ${{ github.token }}

      - name: Checkout repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Setup miniconda
        uses: conda-incubator/setup-miniconda@505e6394dae86d6a5c7fbb6e3fb8938e3e863830 # v3.1.1
        with:
          miniforge-version: 24.11.3-2  # latest version 25.3 had an issue
          activate-environment: build
          python-version: ${{ matrix.python }}
          channels: conda-forge
          conda-remove-defaults: 'true'

      - name: Store conda paths as envs
        shell: bash -l {0}
        run: |
          echo "CONDA_BLD=$CONDA_PREFIX/conda-bld/win-64/" | tr "\\\\" '/' >> $GITHUB_ENV

      - name: List conda env
        run: |
          conda env list

      - name: Install conda-build
        run: |
          conda install conda-build python=3.12  # conda-build does not support python=3.13

      - name: Build conda package
        run: |
          conda env list
          conda build --no-test --python ${{ matrix.python }} -c https://software.repos.intel.com/python/conda -c conda-forge --override-channels conda-recipe

      - name: Upload artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ env.package_name }} ${{ runner.os }} Python ${{ matrix.python }}
          path: ${{ env.CONDA_BLD }}${{ env.package_name }}-*.conda

  test_windows:
    needs: build_windows
    runs-on:  ${{ matrix.runner }}
    defaults:
      run:
        shell: cmd /C CALL {0}

    strategy:
      matrix:
        python: ['3.9', '3.10', '3.11', '3.12']
        experimental: [false]
        runner: [windows-2019]
    continue-on-error: ${{ matrix.experimental }}
    env:
      workdir: '${{ github.workspace }}'
      CHANNELS: -c https://software.repos.intel.com/python/conda -c conda-forge --override-channels

    steps:
      - name: Download artifact
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: ${{ env.package_name }} ${{ runner.os }} Python ${{ matrix.python }}

      - name: Setup miniconda
        uses: conda-incubator/setup-miniconda@505e6394dae86d6a5c7fbb6e3fb8938e3e863830 # v3.1.1
        with:
          miniforge-version: 24.11.3-2  # latest version 25.3 had an issue
          activate-environment: ${{ env.test_env_name }}
          python-version: ${{ matrix.python }}
          channels: conda-forge
          conda-remove-defaults: 'true'

      - name: List conda env
        run: |
          conda env list

      - name: Create conda channel
        run: |
          echo ${{ env.workdir }}
          mkdir ${{ env.workdir }}\channel
          mkdir ${{ env.workdir }}\channel\win-64
          move ${{ env.package_name }}-*.conda ${{ env.workdir }}\channel\win-64
          dir ${{ env.workdir }}\channel\win-64

      - name: Install conda-index
        run: |
          conda install conda-index python=3.12

      - name: Index the channel
        run: |
          python -m conda_index ${{ env.workdir }}\channel

      - name: Test conda channel
        run: |
          conda search ${{ env.package_name }} -c ${{ env.workdir }}\channel --override-channels

      - name: Dump mkl_fft version info from created channel into ver.json
        run: |
          conda search ${{ env.package_name }} -c ${{ env.workdir }}\channel --override-channels --info --json > ${{ env.workdir }}\ver.json

      - name: Output content of produced ver.json
        shell: pwsh
        run: Get-Content -Path ${{ env.workdir }}\ver.json

      - name: List conda env
        run: |
          conda env list

      - name: Install mkl_fft
        run: |
          @ECHO ON
          IF NOT EXIST ver.json (
              copy /Y ${{ env.workdir }}\ver.json .
          )
          set "SCRIPT=%ver_script_part1% %ver_script_part2%"
          FOR /F "tokens=* USEBACKQ" %%F IN (`python -c "%SCRIPT%"`) DO (
             SET PACKAGE_VERSION=%%F
          )
          SET "TEST_DEPENDENCIES=pytest scipy"
          conda env list
          conda install ${{ env.package_name }}=%PACKAGE_VERSION% %TEST_DEPENDENCIES% python=${{ matrix.python }} -c ${{ env.workdir }}\channel ${{ env.CHANNELS }}
          conda env list

      - name: List conda env
        run: |
          conda env list

      - name: Report content of test environment
        run: |
          echo "Value of CONDA environment variable was: " %CONDA%
          echo "Value of CONDA_PREFIX environment variable was: " %CONDA_PREFIX%
          conda info && conda list -n ${{ env.test_env_name }}

      - name: Run tests
        run: |
          conda env list
          python -m pytest -v -s --pyargs ${{ env.package_name }}.tests
